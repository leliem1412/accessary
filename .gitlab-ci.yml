stages:
  - deploy
  - notify

deploy_to_vps:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update && apk add --no-cache git openssh
    - git config --global --add safe.directory /var/www/laval_app
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts
  script:
    - echo "üîÑ SSH v√†o VPS v√† pull code"
    - ssh $VPS_USER@$VPS_HOST "
        cd /var/www/accessary &&
        git pull origin main &&
        echo '‚úÖ Pull code th√†nh c√¥ng'
      "
  after_script:
    - echo $CI_JOB_STATUS > deploy_status.txt
  artifacts:
    paths:
      - deploy_status.txt
  only:
    - main

notify_telegram:
  stage: notify
  image: curlimages/curl:latest
  script:
  - |
    DEPLOY_STATUS=$(cat deploy_status.txt)
    if [ "$DEPLOY_STATUS" == "success" ]; then
      curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
        -d chat_id=$TELEGRAM_CHAT_ID \
        -d text="‚úÖ *Deployment Completed!*%0ARepo: *$CI_PROJECT_NAME*%0ABranch: *$CI_COMMIT_REF_NAME*%0ACommit: *$CI_COMMIT_SHORT_SHA*%0A*Message:* _${CI_COMMIT_MESSAGE}_%0AAuthor: *$GITLAB_USER_NAME*" \
        -d parse_mode=Markdown
    else
      curl -s -X POST https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage \
        -d chat_id=$TELEGRAM_CHAT_ID \
        -d text="‚ùå *Deployment Failed!*%0ARepo: *$CI_PROJECT_NAME*%0ABranch: *$CI_COMMIT_REF_NAME*%0ACommit: *$CI_COMMIT_SHORT_SHA*%0A*Message:* _${CI_COMMIT_MESSAGE}_%0AAuthor: *$GITLAB_USER_NAME*" \
        -d parse_mode=Markdown
    fi
  artifacts:
    paths:
      - deploy_status.txt
  only:
    - main